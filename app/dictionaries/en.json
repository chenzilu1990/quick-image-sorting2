{
  "navigation": {
    "home": "Home",
    "about": "About",
    "uploadConfig": "Upload Config",
    "comfyUIConfig": "ComfyUI Config",
    "sidebarTitle": "Image Sorter",
    "toggleSidebar": "Toggle Sidebar",
    "language": "Language",
    "imageUpload": "Image Upload"
  },
  "home": {
    "title": "Image Sorting and Renaming Tool",
    "description": "Professional online image sorting and renaming tool, supporting drag-and-drop sorting, multiple renaming rules, batch downloading, improving product image processing efficiency.",
    "dropzone": "Drop images here to upload",
    "renamedImagesTitle": "Renamed Images",
    "emptyState": "Drag and drop images anywhere or double-click to select images"
  },
  "buttons": {
    "upload": "Upload",
    "download": "Download",
    "delete": "Delete Selected",
    "rename": "Apply Rename",
    "clearCache": "Clear Cache",
    "clearAll": "Clear All Images",
    "downloadAll": "Download All Renamed Images",
    "downloadSelected": "Download Selected Images",
    "downloadGroup": "Download This Group",
    "uploadToCloud": "Upload to Cloud",
    "clearSelection": "Clear Selection",
    "cancel": "Cancel",
    "proceed": "Proceed to Edit",
    "editWithComfyUI": "Edit with ComfyUI",
    "testConnection": "Test Connection",
    "testing": "Testing...",
    "openComfyUI": "Open ComfyUI",
    "saveConfig": "Save Configuration",
    "saving": "Saving...",
    "selectFolder": "Select Workflow Folder",
    "changeFolder": "Change Authorized Directory",
    "requesting": "Requesting..."
  },
  "renameOptions": {
    "amazon": "Amazon Mode",
    "prefixIndex": "Prefix-Index Mode",
    "customSequence": "Custom Sequence Mode",
    "aiGenerated": "AI Generated Mode"
  },
  "formLabels": {
    "prefix": "Prefix",
    "suffix": "Suffix",
    "customSequence": "Custom Sequence (comma separated)",
    "renameModeLabel": "Rename Mode:",
    "preview": "Preview:"
  },
  "alerts": {
    "configUpload": "Upload function requires upload service configuration",
    "configComfyUI": "Edit function requires ComfyUI service configuration",
    "workflowProcess": "Workflow processing requires ComfyUI service configuration",
    "uploadConfig": "Please configure upload service first",
    "comfyUIConfig": "Please configure ComfyUI service first"
  },
  "modals": {
    "workflowTitle": "Select ComfyUI Workflow",
    "workflowLoading": "Loading workflow list...",
    "workflowDefault": "-- Use Default Workflow --",
    "workflowEmpty": "No available workflows found, please create a workflow in ComfyUI first"
  },
  "status": {
    "uploading": "Uploading...",
    "uploadSuccess": "✓ Upload Successful",
    "processing": "Processing...",
    "downloading": "Downloading...",
    "configChanged": "Configuration changed, will save automatically when focus is lost",
    "autoSaving": "Auto saving...",
    "configSaved": "Configuration saved automatically",
    "saveFailed": "Save failed, please try again",
    "connectionSuccess": "✓ Connection successful: Connected to ComfyUI {version}",
    "connectionFailed": "✗ Connection failed: {message}",
    "accessGranted": "Successfully granted access to directory \"{directory}\"",
    "accessFailed": "Failed to get directory access permission",
    "authError": "Authorization failed: {message}"
  },
  "placeholders": {
    "amazonSku": "SKU (Required)...",
    "prefixOptional": "Enter prefix (Optional)...",
    "suffixOptional": "Enter suffix (Optional)...",
    "customSequenceHint": "Custom sequence (Required, comma-separated, e.g.: Image1,Image2,Image3)",
    "comfyUIServer": "http://localhost:8088",
    "githubToken": "ghp_xxxxxxxxxxxxxxxxxxxx",
    "githubOwner": "Your GitHub username",
    "githubRepo": "Example: my-images",
    "customApiUrl": "https://example.com/api/upload",
    "customApiKey": "Your API key",
    "aiPreview": "AI-Generated-Example.jpg"
  },
  "selectionInfo": {
    "selected": "Selected {count} images",
    "aiModeTip": "Use AI to generate filenames (AI service configuration required)"
  },
  "errors": {
    "saveImagesFailed": "Failed to save image data, possibly due to large image size or lack of IndexedDB support.",
    "saveRenamedFailed": "Failed to save renamed image data, possibly due to large image size or lack of IndexedDB support.",
    "downloadError": "Error downloading images: {message}",
    "saveConfigError": "Save failed: {message}",
    "missingGithubFields": "Please fill in all required GitHub fields",
    "missingApiUrl": "Please enter the custom server API URL"
  },
  "config": {
    "title": "Image Upload Service Configuration",
    "comfyuiTitle": "ComfyUI Configuration",
    "serviceSelector": "Select Upload Service",
    "githubService": "GitHub",
    "githubDesc": "Upload images to a GitHub repository",
    "awsService": "Amazon S3",
    "awsDesc": "Upload images to AWS S3 object storage",
    "tencentService": "Tencent Cloud COS",
    "tencentDesc": "Upload images to Tencent Cloud Object Storage",
    "aliyunService": "Alibaba Cloud OSS",
    "aliyunDesc": "Upload images to Alibaba Cloud Object Storage",
    "qiniuService": "Qiniu Cloud",
    "qiniuDesc": "Upload images to Qiniu Cloud Storage",
    "customService": "Custom Server",
    "customDesc": "Upload to a custom API endpoint",
    "githubConfig": "GitHub Configuration",
    "awsConfig": "AWS S3 Configuration",
    "tencentConfig": "Tencent Cloud COS Configuration",
    "aliyunConfig": "Alibaba Cloud OSS Configuration",
    "qiniuConfig": "Qiniu Cloud Configuration",
    "customConfig": "Custom Server Configuration",
    "githubToken": "Personal Access Token",
    "githubTokenHelp": "Requires a GitHub token with repo permissions.",
    "howToGetToken": "How to get a token?",
    "githubOwner": "Repository Owner",
    "githubRepo": "Repository Name",
    "githubPathInfo": "Storage path will automatically use the prefix name of the image group, no manual configuration needed.",
    "awsAccessKey": "Access Key ID",
    "awsSecretKey": "Secret Key",
    "awsBucket": "Bucket Name",
    "awsRegion": "Region",
    "awsAccessKeyHelp": "The Access Key ID of your AWS IAM user",
    "awsSecretKeyHelp": "The Secret Key associated with your Access Key ID",
    "awsBucketHelp": "The name of your S3 bucket, ensure it's already created",
    "awsRegionHelp": "The AWS region where your bucket is located, e.g., us-east-1",
    "tencentSecretId": "Secret ID",
    "tencentSecretKey": "Secret Key",
    "tencentBucket": "Bucket Name",
    "tencentRegion": "Region",
    "tencentSecretIdHelp": "The SecretId for Tencent Cloud API",
    "tencentSecretKeyHelp": "The SecretKey associated with your SecretId",
    "tencentBucketHelp": "The name of your COS bucket",
    "tencentRegionHelp": "The region where your bucket is located, e.g., ap-guangzhou",
    "aliyunAccessKey": "Access Key ID",
    "aliyunSecretKey": "Secret Key",
    "aliyunBucket": "Bucket Name",
    "aliyunRegion": "Region",
    "aliyunAccessKeyHelp": "Your Alibaba Cloud AccessKey ID",
    "aliyunSecretKeyHelp": "The Secret Key associated with your AccessKey ID",
    "aliyunBucketHelp": "The name of your OSS bucket",
    "aliyunRegionHelp": "The region where your bucket is located, e.g., oss-cn-hangzhou",
    "qiniuAccessKey": "Access Key",
    "qiniuSecretKey": "Secret Key",
    "qiniuBucket": "Bucket Name",
    "qiniuDomain": "Domain",
    "qiniuAccessKeyHelp": "Your Qiniu Cloud AccessKey",
    "qiniuSecretKeyHelp": "The SecretKey associated with your AccessKey",
    "qiniuBucketHelp": "The name of your Qiniu bucket",
    "qiniuDomainHelp": "The domain bound to your bucket, including http:// or https:// prefix",
    "apiUrl": "API URL",
    "apiUrlHelp": "API URL that receives image uploads",
    "apiKey": "API Key (Optional)",
    "apiKeyHelp": "Provide a key if your API requires authentication",
    "serverSettings": "Server Settings",
    "comfyuiServer": "ComfyUI Server Address",
    "comfyuiServerHelp": "Default is http://localhost:8088. Modify if you're running ComfyUI on a different address or port.",
    "workflowFolder": "Local Workflow Folder",
    "authorizedDir": "Authorized Directory:",
    "workflowFolderHelp": "Click the button above to select the folder on your local computer where ComfyUI workflows are stored. The system will open a file picker to select the actual workflow folder. You only need to authorize once, and the system will save this folder access permission to directly read all workflow files in that folder without needing to select it again.",
    "usageInstructions": "Usage Instructions",
    "corsInstructions": "To solve cross-origin restrictions, follow these steps:",
    "corsWarning": "If you don't add the --enable-cors-header parameter, you'll encounter cross-origin errors and won't be able to communicate directly with ComfyUI!",
    "workflowFolderInfo": "About Local Workflow Folder",
    "accessFlowInfo": "This application uses modern Web APIs to directly read workflow files on your computer. The access process is as follows:",
    "authPersistenceInfo": "Authorization is persistent and remains valid even after you close and reopen your browser. If you want to switch to a different workflow folder, simply click the \"Change Authorized Directory\" button and select a new folder.",
    "uploadServiceIntro": "Image upload services allow you to upload processed images to cloud storage and get links. You can choose different services based on your needs.",
    "serviceComparisonTitle": "Service Comparison:",
    "serviceAdvantages": "Advantages",
    "serviceDisadvantages": "Disadvantages",
    "serviceUseCases": "Use Cases",
    "freeOption": "Free",
    "paidOption": "Paid",
    "easySetup": "Easy setup",
    "complexSetup": "Complex setup",
    "bandwidthLimits": "Bandwidth limits",
    "highReliability": "High reliability",
    "fastChinaAccess": "Fast access in China",
    "integratedCDN": "Integrated CDN",
    "customDomainRequired": "Custom domain required",
    "fullControl": "Full control",
    "selfMaintenance": "Self-maintenance required",
    "personalProjects": "Personal projects",
    "smallWebsites": "Small websites",
    "enterpriseUse": "Enterprise applications",
    "highTrafficSites": "High-traffic websites",
    "chinaBased": "China-based users",
    "contentSites": "Content-heavy sites",
    "specialNeeds": "Special requirements",
    "testNotImplemented": "Test functionality not implemented, please test by uploading directly",
    "missingAwsFields": "Please fill in all AWS S3 configuration fields",
    "missingTencentFields": "Please fill in all Tencent Cloud COS configuration fields",
    "missingAliyunFields": "Please fill in all Alibaba Cloud OSS configuration fields",
    "missingQiniuFields": "Please fill in all Qiniu Cloud configuration fields",
    "configGuide": "Configuration Guide",
    "stepsList": {
      "important": "Important: You must add the --enable-cors-header parameter when starting ComfyUI",
      "example": "Example: python main.py --enable-cors-header",
      "setServer": "Set the correct ComfyUI server address",
      "setFolder": "Specify the local folder path where your ComfyUI workflow files are stored",
      "saveAndTest": "Click \"Save Configuration\" and then test the connection"
    },
    "accessStepsList": {
      "clickButton": "Click the \"Select Workflow Folder\" button",
      "selectFolder": "In the file picker that appears, select the actual folder where your ComfyUI workflow files are stored",
      "remember": "After authorization, the system will remember your selection and automatically read all JSON files in that folder",
      "scan": "The system will scan the folder and all its subfolders for JSON files to use as workflows"
    },
    "uploadServiceGuides": {
      "github": {
        "title": "GitHub Image Hosting Configuration Guide",
        "intro": "GitHub image hosting uses GitHub repositories to store images. It's free to use but has certain limitations. Suitable for small projects and personal use.",
        "steps": "Configuration Steps:",
        "step1": "Create a GitHub Token:",
        "step1_1": "Visit the GitHub Token Settings page",
        "step1_2": "Click \"Generate new token\" (Classic)",
        "step1_3": "Give the token a descriptive name (e.g., \"Image Upload\")",
        "step1_4": "Select the \"repo\" permission scope (this allows access to your repositories)",
        "step1_5": "Click the \"Generate token\" button at the bottom",
        "step1_6": "Copy the generated token (Note: This token is only displayed once!)",
        "step2": "Prepare a Repository:",
        "step2_1": "You can use an existing repository or create a new one for storing images",
        "step2_2": "To create a new repository, visit the GitHub Create Repository page",
        "step2_3": "It's recommended to set the repository as public for direct access to image links",
        "step3": "Fill in Configuration Information:",
        "step3_1": "Enter your newly generated Personal Access Token",
        "step3_2": "Enter the repository owner (your GitHub username)",
        "step3_3": "Enter the repository name (without the username, e.g., \"my-images\")",
        "notes": "Important Notes:",
        "note1": "GitHub has storage and bandwidth limits, not suitable for large amounts of images or high-traffic websites",
        "note2": "The token has access to your repositories, keep it secure",
        "note3": "Images will be automatically organized into folders based on the image group prefix",
        "note4": "The generated image URL format is: https://raw.githubusercontent.com/username/repo/main/image-path"
      },
      "aws": {
        "title": "AWS S3 Configuration Guide",
        "intro": "Amazon S3 is a reliable object storage service ideal for storing and distributing images. It provides high availability, security, and performance.",
        "steps": "Configuration Steps:",
        "step1": "Create an AWS Account:",
        "step1_1": "If you don't have an AWS account yet, visit the AWS website to register",
        "step2": "Create an S3 Bucket:",
        "step2_1": "Log in to the AWS Management Console",
        "step2_2": "Search for and navigate to the S3 service",
        "step2_3": "Click \"Create bucket\"",
        "step2_4": "Choose a unique bucket name and region",
        "step2_5": "If you need public access to images, uncheck \"Block all public access\"",
        "step2_6": "Keep other settings as default and click \"Create bucket\"",
        "step3": "Configure Bucket Permissions:",
        "step3_1": "For public image access, go to bucket → Permissions → Bucket policy",
        "step3_2": "Add a policy similar to the following (replace YOUR-BUCKET-NAME):",
        "step3_policy": "Policy JSON example",
        "step4": "Create IAM Access Keys:",
        "step4_1": "Go to the IAM service, create a dedicated user or use an existing one",
        "step4_2": "Add S3 access permission policies for that user",
        "step4_3": "Create access keys (Access Key and Secret Key)",
        "step5": "Fill in Configuration Information:",
        "step5_1": "Access Key: Your IAM access key",
        "step5_2": "Secret Key: The corresponding secret key",
        "step5_3": "Bucket: Your created bucket name",
        "step5_4": "Region: The region where your bucket is located (e.g., us-east-1)",
        "notes": "Important Notes:",
        "note1": "AWS S3 is a paid service that charges based on storage amount and request frequency",
        "note2": "Use specific IAM users with limited permissions instead of the root account",
        "note3": "To reduce costs, consider setting up lifecycle rules or using S3 Glacier storage class",
        "note4": "Keys have access to your S3 resources, keep them secure"
      },
      "tencent": {
        "title": "Tencent Cloud COS Configuration Guide",
        "intro": "Tencent Cloud Object Storage (COS) is a storage service provided by Tencent Cloud with high scalability, low cost, reliability, and security.",
        "steps": "Configuration Steps:",
        "step1": "Register a Tencent Cloud Account:",
        "step1_1": "Visit the Tencent Cloud website to register an account",
        "step2": "Create a Bucket:",
        "step2_1": "Log in to the Tencent Cloud Console",
        "step2_2": "Navigate to the COS product page",
        "step2_3": "Click \"Create Bucket\"",
        "step2_4": "Choose a name, region, and access permissions",
        "step2_5": "For public image access, set permissions to \"Public Read, Private Write\"",
        "step3": "Get API Keys:",
        "step3_1": "Click on your account in the top right corner of the console",
        "step3_2": "Select \"Access Management\" → \"Access Keys\" → \"API Key Management\"",
        "step3_3": "Create or view your SecretId and SecretKey",
        "step4": "Fill in Configuration Information:",
        "step4_1": "SecretId: Your Tencent Cloud API SecretId",
        "step4_2": "SecretKey: Your Tencent Cloud API SecretKey",
        "step4_3": "Bucket: Bucket name",
        "step4_4": "Region: Bucket region (e.g., ap-guangzhou)",
        "notes": "Important Notes:",
        "note1": "Tencent Cloud COS charges based on storage and traffic, new users typically get free quotas",
        "note2": "To reduce costs, you can choose low-frequency storage or archive storage types",
        "note3": "You can configure CDN acceleration to improve image access speed",
        "note4": "Keys have access to your cloud resources, keep them secure"
      },
      "aliyun": {
        "title": "Alibaba Cloud OSS Configuration Guide",
        "intro": "Alibaba Cloud Object Storage Service (OSS) provides massive, secure, low-cost, and highly reliable cloud storage suitable for various image storage needs.",
        "steps": "Configuration Steps:",
        "step1": "Register an Alibaba Cloud Account:",
        "step1_1": "Visit the Alibaba Cloud website to register an account",
        "step2": "Create an OSS Bucket:",
        "step2_1": "Log in to the Alibaba Cloud Console",
        "step2_2": "Search for and navigate to the OSS service",
        "step2_3": "Click \"Create Bucket\"",
        "step2_4": "Set the bucket name, region, storage type, etc.",
        "step2_5": "For public image access, set read/write permissions to \"Public Read\"",
        "step2_6": "Keep other settings as default and click \"OK\"",
        "step3": "Create AccessKey:",
        "step3_1": "Click on your avatar in the top right corner of the console",
        "step3_2": "Select \"AccessKey Management\"",
        "step3_3": "Create a sub-account AccessKey instead of using the primary account (more secure)",
        "step3_4": "Record the generated AccessKey ID and AccessKey Secret",
        "step4": "Fill in Configuration Information:",
        "step4_1": "AccessKey: Your created AccessKey ID",
        "step4_2": "SecretKey: Your created AccessKey Secret",
        "step4_3": "Bucket: OSS bucket name",
        "step4_4": "Region: Bucket region (e.g., oss-cn-hangzhou)",
        "notes": "Important Notes:",
        "note1": "Alibaba Cloud OSS is a pay-as-you-go service that charges based on storage and traffic",
        "note2": "It's recommended to enable CDN acceleration to improve image access speed and potentially reduce traffic costs",
        "note3": "Use sub-account AccessKeys with limited permissions for enhanced security",
        "note4": "You can set lifecycle rules to automatically convert storage types or delete files to reduce costs"
      },
      "qiniu": {
        "title": "Qiniu Cloud Configuration Guide",
        "intro": "Qiniu Cloud is a well-known cloud storage provider in China, offering fast, secure storage and distribution for images and other static resources.",
        "steps": "Configuration Steps:",
        "step1": "Register a Qiniu Cloud Account:",
        "step1_1": "Visit the Qiniu Cloud website to register an account",
        "step2": "Create a Storage Space:",
        "step2_1": "Log in to the Qiniu Cloud Console",
        "step2_2": "Navigate to Object Storage → Space Management",
        "step2_3": "Click \"Create Space\"",
        "step2_4": "Enter a space name, select a storage region and access control",
        "step2_5": "For public access, select \"Public Space\"",
        "step3": "Get API Keys:",
        "step3_1": "In the Qiniu Cloud Console, click on your avatar in the top right corner",
        "step3_2": "Select \"Key Management\"",
        "step3_3": "Get your AccessKey and SecretKey",
        "step4": "Bind a Domain:",
        "step4_1": "Qiniu Cloud requires a custom domain to access images",
        "step4_2": "In space settings, go to \"Domain Management\"",
        "step4_3": "Bind your own domain or use a test domain provided by Qiniu",
        "step4_4": "If using a custom domain, add a CNAME record at your DNS provider",
        "step5": "Fill in Configuration Information:",
        "step5_1": "AccessKey: Your Qiniu Cloud AccessKey",
        "step5_2": "SecretKey: Your Qiniu Cloud SecretKey",
        "step5_3": "Bucket: Storage space name",
        "step5_4": "Domain: Bound domain (including http:// or https:// prefix)",
        "notes": "Important Notes:",
        "note1": "Qiniu Cloud requires a custom domain to access stored resources",
        "note2": "Qiniu Cloud provides test domains (valid for 30 days), but production environments must use your own domain",
        "note3": "Qiniu Cloud charges based on storage and traffic, new users get some free quota",
        "note4": "Qiniu Cloud comes with built-in CDN acceleration for faster access"
      },
      "custom": {
        "title": "Custom Server Configuration Guide",
        "intro": "The custom server option allows you to upload images to your own API endpoint, which can be your own server or another cloud service.",
        "steps": "Configuration Steps:",
        "step1": "Prepare an API Endpoint:",
        "step1_1": "You need to implement an API endpoint that receives image uploads",
        "step1_2": "The API should accept POST requests in multipart/form-data format",
        "step1_3": "The API should handle a file field named \"file\"",
        "step1_4": "The API should return a JSON response containing the successful image upload URL",
        "step2": "API Response Format Example:",
        "step2_example": "JSON response format example",
        "step3": "Fill in Configuration Information:",
        "step3_1": "API URL: Your image upload API address",
        "step3_2": "API Key: Provide a key if your API requires authentication (optional)",
        "notes": "Important Notes:",
        "note1": "Ensure your API supports Cross-Origin Requests (CORS), otherwise uploads may fail",
        "note2": "The API should always return a JSON response containing a success field",
        "note3": "If an API key is provided, it will be sent as an \"Authorization: Bearer YOUR_API_KEY\" header",
        "note4": "The API can also receive an optional \"path\" parameter to specify the image storage path",
        "codeExamples": "Custom API Code Examples:",
        "nodeExample": "View Node.js Example (Express)",
        "phpExample": "View PHP Example"
      },
      "default": {
        "title": "Image Upload Service Guide",
        "intro": "Please select an image upload service to configure. The upload service is responsible for storing your uploaded images and providing accessible links.",
        "comparison": "Available Service Comparison:",
        "service": "Service",
        "advantages": "Advantages",
        "disadvantages": "Disadvantages",
        "useCases": "Use Cases",
        "recommendations": "Recommendations:",
        "forPersonal": "For personal users and small projects, consider GitHub (free) or Qiniu Cloud (with free quotas)",
        "forEnterprise": "For enterprise users, AWS S3, Tencent Cloud COS, or Alibaba Cloud OSS are recommended",
        "forCustom": "If you already have your own server or storage service, choose the custom server option",
        "finalTip": "Please make your choice based on your actual needs, access location, and budget"
      }
    }
  }
} 